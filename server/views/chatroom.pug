doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='style/chatroom.css')
    title Dashboard
  body
    .left
      .profile
        img(src='/assets/dp.jpg', width='50px', height='50px', alt='', srcset='')
        h1 zxcvbnm
      .room-list
        h2 Joined Rooms
        ul
          each item in room
            form(action=item.roomTitle, method='post')#room-in-roomlist
              button(type="submit")#room-btn
                p#room-title-in-room-list= item.roomTitle
                p
                  | Active: 
                  span 12
                  | , Admin: 
                  span Ritik Pal
    .middle
      .room-details-top
        p#room-title-in-middle
        p#room-desc-in-middle desc
      .chat-box#chat-box
        li #{room}
      .input-field
        form.input-form(action='/chatmessage' method='post')
          input#input-field-in-middle(type='text', placeholder='Type the message' name='chatmessage')
          button#attachment-btn-in-middle
            img#attachment-icon(src='/assets/attach.png')
          button#send-btn-in-middle(type='submit')
            img#send-icon(src='/assets/send.png', alt='', srcset='')
    .right
      h2 Active
      ul#admins-in-room-right
        h2 #Admin
        li sagar neupane
        li shubham pandey
      ul#non-admins-in-room-right
        h2 #Non-Admins
        li sanjay kandel
        li ankush kumar
        li pawan kumar
        li harsh tiwari
        li ashwani yadav
        li jetram singh
        li vasudev sharma

    script(src="socket.io/socket.io.js") 
    script.
        //- async function establishConnection() {
        //-   //dom manipulation here
        //-   const roomTitleinRoomList = document.getElementById('room-title-in-room-list');
        //-   const roomTitleinMiddle = document.getElementById('room-title-in-middle');
        //-   const inputFieldinMiddle = document.getElementById('input-field-in-middle');
        //-   const sendBtninMiddle = document.getElementById('send-btn-in-middle');
        //-   const inputForm = document.querySelector('.input-form');
        //-   const chatBox = document.getElementById('chat-box');

        //-   roomTitleinRoomList.innerText = room;
        //-   roomTitleinMiddle.innerText = room;

        //-   var room = JSON.parse('!{JSON.stringify(room)}');
        //-   console.log(room);

        //-   console.log("entered chatroom");
        //-   const socket = io(`/${room}`, {
        //-       transports: ['websocket'],
        //-       //upgrade: false,
        //-       //rejectUnauthorized: false
        //-   });

        //-   await socket.on('connect', () => {
        //-       console.log(`connected to ${socket.id}`);
        //-       socket.emit('event', "client connected boss");
        //-       socket.on('event', (msg) => {
        //-           console.log(msg);
        //-       });
        //-   });
        //- } 

        //- establishConnection();

        //dom manipulation here
          const roomTitleinRoomList = document.getElementById('room-title-in-room-list');
          const roomTitleinMiddle = document.getElementById('room-title-in-middle');
          const inputFieldinMiddle = document.getElementById('input-field-in-middle');
          const sendBtninMiddle = document.getElementById('send-btn-in-middle');
          const inputForm = document.querySelector('.input-form');
          const chatBox = document.getElementById('chat-box');

          roomTitleinRoomList.innerText = room;
          roomTitleinMiddle.innerText = room;

          var room = JSON.parse('!{JSON.stringify(room)}');
          console.log(room);

        const createNamespace = (room) => {
            const socket = io(`/${room}`, {
              transports: ['websocket']
            });

            socket.on('connect', () => {
                console.log(`A client with Namespace: ${room} has connected with socketId: ${socket.id}`);
            });

            sendBtninMiddle.addEventListener('click', (event) => {
                event.preventDefault();
                socket.emit("chatMessageForServer", inputFieldinMiddle.value);
            });
            inputForm.addEventListener('submit', (event) => {
                event.preventDefault();
                socket.emit("chatMessageForServer", inputFieldinMiddle.value);
            });

            socket.on("chatMessageForClient", (msg) => {
                let li = document.createElement("li");
                li.innerHTML = msg;
                chatBox.appendChild(li);
            });
        }

        createNamespace(room);